#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 586704 bytes for Chunk::new
# Possible reasons:
#   The system is out of physical RAM or swap space
#   In 32 bit mode, the process size limit was hit
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Use 64 bit Java on a 64 bit OS
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (allocation.cpp:323), pid=6652, tid=1806883648
#
# JRE version: Java(TM) SE Runtime Environment (7.0_72-b14) (build 1.7.0_72-b14)
# Java VM: Java HotSpot(TM) Server VM (24.72-b04 mixed mode linux-x86 )
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#

---------------  T H R E A D  ---------------

Current thread (0x6c098c00):  JavaThread "C2 CompilerThread1" daemon [_thread_in_native, id=6717, stack(0x6baad000,0x6bb2e000)]

Stack: [0x6baad000,0x6bb2e000],  sp=0x6bb2b370,  free space=504k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [libjvm.so+0x7e8a76]  VMError::report_and_die()+0x1a6
V  [libjvm.so+0x33d9e2]  report_vm_out_of_memory(char const*, int, unsigned int, char const*)+0x72
V  [libjvm.so+0x18c8a5]  Chunk::operator new(unsigned int, AllocFailStrategy::AllocFailEnum, unsigned int)+0x105
V  [libjvm.so+0x18d3dc]  Arena::grow(unsigned int, AllocFailStrategy::AllocFailEnum)+0x2c
V  [libjvm.so+0x700054]  resource_allocate_bytes(unsigned int, AllocFailStrategy::AllocFailEnum)+0x64
V  [libjvm.so+0x3a64ce]